!function(){"use strict";function e(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function r(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r;const o=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent="",o.classList.remove(r.errorClass)}const o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},a=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):n(t,r)};let s,i;const c=document.querySelector(".profile__avatar"),l=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}toggleLikeCard(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1f3d47ec-48a6-48e0-95f2-0844dd9a33b4","Content-Type":"application/json"}});u.getAppInfo().then((e=>{let[t,r]=e;t.forEach((function(e){G(K(e))})),c.src=r.avatar,l.textContent=r.name,d.textContent=r.about})).catch(console.error);const m=document.querySelector("#card__template").content,_=document.querySelector(".cards__list"),f=document.querySelector(".profile__column"),h=f.querySelector("#profile__name"),v=f.querySelector("#profile__description"),y=Array.from(document.querySelectorAll(".modal")),b=document.querySelector("#edit-profile-modal"),p=document.forms["modal__form-edit-profile"],S=b.querySelector("#name"),E=b.querySelector("#description"),q=document.querySelector("#profile__edit-btn"),k=document.querySelector("#modal__edit-profile-close-btn"),L=b.querySelector(".modal__button"),g=document.querySelector("#add-card-modal"),C=document.querySelector("#modal__add-card-close-btn"),$=document.forms["modal__form-add-card"],j=document.forms["edit-avatar-form"],U=document.forms["delete-form"],A=document.querySelector("#profile__add-card-btn"),P=document.querySelector(".profile__avatar-btn"),x=document.querySelector("#edit-avatar-modal"),D=document.querySelector("#delete-modal"),I=g.querySelector("#image-link-input"),w=g.querySelector("#caption-input"),T=g.querySelector(".modal__button"),B=j.querySelector("#profile-avatar-input"),N=U.querySelector(".modal__button-cancel"),O=document.querySelector(".modal__delete-close-btn"),J=document.querySelector("#modal-preview-image"),H=J.querySelector(".modal__preview-image"),z=J.querySelector(".modal__preview-image-title"),M=document.querySelector("#modal__preview-image-close-btn"),F=document.querySelector("#modal__edit-avatar-close-btn");function G(e){_[arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend"](e)}function K(e){const t=m.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__image");r.addEventListener("click",(()=>{H.src=e.link,H.alt=e.name,z.textContent=e.name,R(J)})),r.src=e.link,r.alt=e.name,r.id=e._id;const o=t.querySelector(".card__content .card__title"),n=t.querySelector(".card__like-button");return e.isLiked&&n.classList.add("card__like-button-liked"),n.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-button-liked");u.toggleLikeCard(t,r).then((()=>{e.target.classList.toggle("card__like-button-liked")})).catch(console.error)}(t,e._id))),t.querySelector(".card__delete-button").addEventListener("click",(()=>{!function(e,t){s=e,i=t}(t,e._id),R(D)})),o.textContent=e.name,t}const Q=e=>{"Escape"===e.key&&y.forEach((e=>{e.classList.contains("modal_opened")&&V(e)}))};function R(e){e.classList.add("modal_opened"),document.addEventListener("keydown",Q)}function V(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",Q)}q.addEventListener("click",(()=>{var e;S.value=h.textContent,E.value=v.textContent.trim(),e=p,[S,E].forEach((o=>{r(e,o,t)})),n(L,t),R(b)})),A.addEventListener("click",(()=>{R(g)})),k.addEventListener("click",(()=>{V(b)})),C.addEventListener("click",(()=>{V(g)})),P.addEventListener("click",(()=>{R(x)})),M.addEventListener("click",(()=>{V(J)})),F.addEventListener("click",(()=>{V(x)})),N.addEventListener("click",(()=>{V(D)})),O.addEventListener("click",(()=>{V(D)})),p.addEventListener("submit",(function(t){t.preventDefault(),e(t.submitter,!0),u.editUserInfo({name:S.value,about:E.value}).then((e=>{h.textContent=e.name,v.textContent=e.about,V(b)})).catch(console.error).finally((()=>{e(t.submitter,!1)}))})),$.addEventListener("submit",(function(r){r.preventDefault(),e(r.submitter,!0),u.addCard({name:w.value,link:I.value}).then((e=>{G(K(e)),r.target.reset(),o(T,t),V(g)})).catch(console.error).finally((()=>{e(r.submitter,!1)}))})),j.addEventListener("submit",(function(t){t.preventDefault(),e(t.submitter,!0),u.editAvatarInfo(B.value).then((e=>{c.src=e.avatar,V(x)})).catch(console.error).finally((()=>{e(t.submitter,!1)}))})),U.addEventListener("submit",(function(t){e(t.submitter,!0,"Delete","Deleting..."),u.removeCard(i).then((()=>{s.remove(),V(D)})).catch(console.error).finally((()=>{e(t.submitter,!1,"Delete","Deleting...")}))})),y.forEach((e=>{e.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&V(e.target)}))})),(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{t.addEventListener("submit",(e=>{e.preventDefault()})),function(e,t){const o=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);a(o,n,t),o.forEach((s=>{s.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?r(e,t,o):function(e,t,r,o){const n=e.querySelector(`.${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r,n.classList.add(o.errorClass)}(e,t,t.validationMessage,o)})(e,s,t),a(o,n,t)}))}))}(t,e)}))})(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,